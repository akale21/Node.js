Client-server:

 request
client   <=======>  server
          response

protocols:
* set of communication rules that two sides agree to use when communicating

ports:
* a program running on a computer can listen for request sent to paticular port number
* that's how we root address to nodejs
.........................................................................................

    request + request header
client         <========================>    server
                response + response header

createServer() - creates a server
writeHead() - sends response header to the request with content-type and status
end() - ending the response header with one last msg
listen() - start the server with port number and ip address
.........................................................................................

buffers:
* temporary storage spot for a chunk of data that being transferred from one place to another
* the buffer is filled with data then passed along
* transfer small chunks of data at a time

streams:
* streams are objects that allow developers to read or write data from and to a source in a continuous manner
* can create streams in nodejs to transfer data
* streams help in increase performance  
............................................................................................

